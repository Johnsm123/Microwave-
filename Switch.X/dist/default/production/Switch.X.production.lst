

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Feb 10 15:49:59 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175                           
   176                           	psect	idataCOMMON
   177     07C2                     __pidataCOMMON:
   178                           
   179                           ;initializer for _once
   180     07C2  3401               	retlw	1
   181     0040                     _RD0            set	64
   182     0033                     _RB3            set	51
   183     0440                     _TRISD0         set	1088
   184     0433                     _TRISB3         set	1075
   185                           
   186                           	psect	cinit
   187     07F6                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07F6                     __initialization:
   191                           
   192                           ; Initialize objects allocated to COMMON
   193     07F6  120A  118A  27C2  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   194     07FB  00F2               	movwf	__pdataCOMMON& (0+127)
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2FC8   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	dataCOMMON
   203     0072                     __pdataCOMMON:
   204     0072                     _once:
   205     0072                     	ds	1
   206                           
   207                           	psect	cstackCOMMON
   208     0070                     __pcstackCOMMON:
   209     0070                     ?_init_config:
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     main@wait:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ??_init_config:	
   217                           ; 2 bytes @ 0x0
   218                           
   219     0070                     ??_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222                           
   223                           ; 1 bytes @ 0x0
   224     0070                     	ds	2
   225                           
   226                           	psect	maintext
   227     07C8                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 24 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  wait            2    0[COMMON] unsigned int 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         2       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0
   250 ;;      Totals:         2       0       0       0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels required when called: 1
   253 ;; This function calls:
   254 ;;		_init_config
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260     07C8                     _main:	
   261                           ;psect for function _main
   262                           
   263     07C8                     l569:	
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   266                           
   267                           
   268                           ;main.c: 26:     init_config();
   269     07C8  120A  118A  27C3  120A  118A  	fcall	_init_config
   270     07CD                     l571:
   271                           
   272                           ;main.c: 38:     for(unsigned int wait = 500; wait--;);
   273     07CD  30F4               	movlw	244
   274     07CE  00F0               	movwf	main@wait
   275     07CF  3001               	movlw	1
   276     07D0  00F1               	movwf	main@wait+1
   277     07D1                     l573:
   278     07D1  3001               	movlw	1
   279     07D2  02F0               	subwf	main@wait,f
   280     07D3  3000               	movlw	0
   281     07D4  1C03               	skipc
   282     07D5  03F1               	decf	main@wait+1,f
   283     07D6  02F1               	subwf	main@wait+1,f
   284     07D7  0A70               	incf	main@wait,w
   285     07D8  1D03               	skipz
   286     07D9  2FDE               	goto	u11
   287     07DA  0A71               	incf	main@wait+1,w
   288     07DB  1D03               	btfss	3,2
   289     07DC  2FDE               	goto	u11
   290     07DD  2FDF               	goto	u10
   291     07DE                     u11:
   292     07DE  2FD1               	goto	l573
   293     07DF                     u10:
   294     07DF                     l20:
   295                           
   296                           ;main.c: 40:     if(RB3 == 0 && once == 1)
   297     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   298     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   299     07E1  1986               	btfsc	6,3	;volatile
   300     07E2  2FE4               	goto	u21
   301     07E3  2FE5               	goto	u20
   302     07E4                     u21:
   303     07E4  2FED               	goto	l581
   304     07E5                     u20:
   305     07E5                     l575:
   306     07E5  0372               	decf	_once,w
   307     07E6  1D03               	btfss	3,2
   308     07E7  2FE9               	goto	u31
   309     07E8  2FEA               	goto	u30
   310     07E9                     u31:
   311     07E9  2FED               	goto	l581
   312     07EA                     u30:
   313     07EA                     l577:
   314                           
   315                           ;main.c: 41:     {;main.c: 42:         once = 0;
   316     07EA  01F2               	clrf	_once
   317     07EB                     l579:
   318                           
   319                           ;main.c: 43:         RD0 = !RD0;
   320     07EB  3001               	movlw	1
   321     07EC  0688               	xorwf	8,f
   322     07ED                     l581:
   323                           
   324                           ;main.c: 47:     if(RB3 == 1)
   325     07ED  1D86               	btfss	6,3	;volatile
   326     07EE  2FF0               	goto	u41
   327     07EF  2FF1               	goto	u40
   328     07F0                     u41:
   329     07F0  2FF3               	goto	l23
   330     07F1                     u40:
   331     07F1                     l583:
   332                           
   333                           ;main.c: 48:     {;main.c: 49:         once = 1;
   334     07F1  3001               	movlw	1
   335     07F2  00F2               	movwf	_once
   336     07F3                     l23:
   337     07F3  120A  118A  2800   	ljmp	start
   338     07F6                     __end_of_main:
   339                           
   340                           	psect	text1
   341     07C3                     __ptext1:	
   342 ;; *************** function _init_config *****************
   343 ;; Defined at:
   344 ;;		line 13 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		None
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0
   361 ;;      Totals:         0       0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371     07C3                     _init_config:	
   372                           ;psect for function _init_config
   373                           
   374     07C3                     l567:	
   375                           ;incstack = 0
   376                           ; Regs used in _init_config: []
   377                           
   378                           
   379                           ;main.c: 16:     TRISB3 = 1;
   380     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   381     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   382     07C5  1586               	bsf	6,3	;volatile
   383                           
   384                           ;main.c: 19:     TRISD0 = 0;
   385     07C6  1008               	bcf	8,0	;volatile
   386     07C7                     l11:
   387     07C7  0008               	return
   388     07C8                     __end_of_init_config:
   389     0002                     ___latbits      equ	2
   390     007E                     btemp           set	126	;btemp
   391     007E                     wtemp0          set	126
   392                           
   393                           	psect	config
   394                           
   395                           ;Config register CONFIG @ 0x2007
   396                           ;	Oscillator Selection bits
   397                           ;	FOSC = 0x3, unprogrammed default
   398                           ;	Watchdog Timer Enable bit
   399                           ;	WDTE = OFF, WDT disabled
   400                           ;	Power-up Timer Enable bit
   401                           ;	PWRTE = 0x1, unprogrammed default
   402                           ;	Brown-out Reset Enable bit
   403                           ;	BOREN = 0x1, unprogrammed default
   404                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   405                           ;	LVP = 0x1, unprogrammed default
   406                           ;	Data EEPROM Memory Code Protection bit
   407                           ;	CPD = 0x1, unprogrammed default
   408                           ;	Flash Program Memory Write Enable bits
   409                           ;	WRT = 0x3, unprogrammed default
   410                           ;	In-Circuit Debugger Mode bit
   411                           ;	DEBUG = 0x1, unprogrammed default
   412                           ;	Flash Program Memory Code Protection bit
   413                           ;	CP = 0x1, unprogrammed default
   414     2007                     	org	8199
   415     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              0 COMMON     2     2      0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       0      0.0%
BITBANK0            80      0       0      0.0%
COMMON              14      2       3     21.4%
BITCOMMON           14      0       0      0.0%
DATA                 0      0       3      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Feb 10 15:49:59 2025

                     l11 07C7                       l20 07DF                       l23 07F3  
                     u10 07DF                       u11 07DE                       u20 07E5  
                     u21 07E4                       u30 07EA                       u31 07E9  
                     u40 07F1                       u41 07F0                      l571 07CD  
                    l581 07ED                      l573 07D1                      l567 07C3  
                    l583 07F1                      l575 07E5                      l577 07EA  
                    l569 07C8                      l579 07EB                      _RB3 0033  
                    _RD0 0040                     _main 07C8                     _once 0072  
                   btemp 007E                     start 0000                    ?_main 0070  
           ?_init_config 0070                    status 0003                    wtemp0 007E  
        __initialization 07F6             __end_of_main 07F6                   ??_main 0070  
                 _TRISB3 0433                   _TRISD0 0440             __pdataCOMMON 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07C8  
                __ptext1 07C3     end_of_initialization 07FC            __pidataCOMMON 07C2  
    start_initialization 07F6            ??_init_config 0070                ___latbits 0002  
    __end_of_init_config 07C8              _init_config 07C3                 main@wait 0070  
